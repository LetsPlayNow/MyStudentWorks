#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinqToSql
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_BOOKS")]
	public partial class DB_BOOKSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAuthor(Author instance);
    partial void UpdateAuthor(Author instance);
    partial void DeleteAuthor(Author instance);
    partial void InsertBook(Book instance);
    partial void UpdateBook(Book instance);
    partial void DeleteBook(Book instance);
    partial void InsertPurchase(Purchase instance);
    partial void UpdatePurchase(Purchase instance);
    partial void DeletePurchase(Purchase instance);
    partial void InsertDelivery(Delivery instance);
    partial void UpdateDelivery(Delivery instance);
    partial void DeleteDelivery(Delivery instance);
    partial void InsertPublishing_house(Publishing_house instance);
    partial void UpdatePublishing_house(Publishing_house instance);
    partial void DeletePublishing_house(Publishing_house instance);
    #endregion
		
		public DB_BOOKSDataContext() : 
				base(global::LinqToSql.Properties.Settings.Default.DB_BOOKSConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DB_BOOKSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_BOOKSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_BOOKSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_BOOKSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Author> Authors
		{
			get
			{
				return this.GetTable<Author>();
			}
		}
		
		public System.Data.Linq.Table<Book> Books
		{
			get
			{
				return this.GetTable<Book>();
			}
		}
		
		public System.Data.Linq.Table<Purchase> Purchases
		{
			get
			{
				return this.GetTable<Purchase>();
			}
		}
		
		public System.Data.Linq.Table<Delivery> Deliveries
		{
			get
			{
				return this.GetTable<Delivery>();
			}
		}
		
		public System.Data.Linq.Table<Publishing_house> Publishing_houses
		{
			get
			{
				return this.GetTable<Publishing_house>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Authors")]
	public partial class Author : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Code_author;
		
		private string _name_author;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private EntitySet<Book> _Books;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCode_authorChanging(int value);
    partial void OnCode_authorChanged();
    partial void Onname_authorChanging(string value);
    partial void Onname_authorChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    #endregion
		
		public Author()
		{
			this._Books = new EntitySet<Book>(new Action<Book>(this.attach_Books), new Action<Book>(this.detach_Books));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code_author", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Code_author
		{
			get
			{
				return this._Code_author;
			}
			set
			{
				if ((this._Code_author != value))
				{
					this.OnCode_authorChanging(value);
					this.SendPropertyChanging();
					this._Code_author = value;
					this.SendPropertyChanged("Code_author");
					this.OnCode_authorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_author", DbType="Char(30)")]
		public string name_author
		{
			get
			{
				return this._name_author;
			}
			set
			{
				if ((this._name_author != value))
				{
					this.Onname_authorChanging(value);
					this.SendPropertyChanging();
					this._name_author = value;
					this.SendPropertyChanged("name_author");
					this.Onname_authorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Author_Book", Storage="_Books", ThisKey="Code_author", OtherKey="Code_author")]
		public EntitySet<Book> Books
		{
			get
			{
				return this._Books;
			}
			set
			{
				this._Books.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Books(Book entity)
		{
			this.SendPropertyChanging();
			entity.Author = this;
		}
		
		private void detach_Books(Book entity)
		{
			this.SendPropertyChanging();
			entity.Author = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Books")]
	public partial class Book : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Code_book;
		
		private string _Title_book;
		
		private System.Nullable<int> _Code_author;
		
		private System.Nullable<int> _Pages;
		
		private System.Nullable<int> _Code_publish;
		
		private EntitySet<Purchase> _Purchases;
		
		private EntityRef<Author> _Author;
		
		private EntityRef<Publishing_house> _Publishing_house;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCode_bookChanging(int value);
    partial void OnCode_bookChanged();
    partial void OnTitle_bookChanging(string value);
    partial void OnTitle_bookChanged();
    partial void OnCode_authorChanging(System.Nullable<int> value);
    partial void OnCode_authorChanged();
    partial void OnPagesChanging(System.Nullable<int> value);
    partial void OnPagesChanged();
    partial void OnCode_publishChanging(System.Nullable<int> value);
    partial void OnCode_publishChanged();
    #endregion
		
		public Book()
		{
			this._Purchases = new EntitySet<Purchase>(new Action<Purchase>(this.attach_Purchases), new Action<Purchase>(this.detach_Purchases));
			this._Author = default(EntityRef<Author>);
			this._Publishing_house = default(EntityRef<Publishing_house>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code_book", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Code_book
		{
			get
			{
				return this._Code_book;
			}
			set
			{
				if ((this._Code_book != value))
				{
					this.OnCode_bookChanging(value);
					this.SendPropertyChanging();
					this._Code_book = value;
					this.SendPropertyChanged("Code_book");
					this.OnCode_bookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title_book", DbType="Char(40)")]
		public string Title_book
		{
			get
			{
				return this._Title_book;
			}
			set
			{
				if ((this._Title_book != value))
				{
					this.OnTitle_bookChanging(value);
					this.SendPropertyChanging();
					this._Title_book = value;
					this.SendPropertyChanged("Title_book");
					this.OnTitle_bookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code_author", DbType="Int")]
		public System.Nullable<int> Code_author
		{
			get
			{
				return this._Code_author;
			}
			set
			{
				if ((this._Code_author != value))
				{
					if (this._Author.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCode_authorChanging(value);
					this.SendPropertyChanging();
					this._Code_author = value;
					this.SendPropertyChanged("Code_author");
					this.OnCode_authorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pages", DbType="Int")]
		public System.Nullable<int> Pages
		{
			get
			{
				return this._Pages;
			}
			set
			{
				if ((this._Pages != value))
				{
					this.OnPagesChanging(value);
					this.SendPropertyChanging();
					this._Pages = value;
					this.SendPropertyChanged("Pages");
					this.OnPagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code_publish", DbType="Int")]
		public System.Nullable<int> Code_publish
		{
			get
			{
				return this._Code_publish;
			}
			set
			{
				if ((this._Code_publish != value))
				{
					if (this._Publishing_house.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCode_publishChanging(value);
					this.SendPropertyChanging();
					this._Code_publish = value;
					this.SendPropertyChanged("Code_publish");
					this.OnCode_publishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_Purchase", Storage="_Purchases", ThisKey="Code_book", OtherKey="Code_book")]
		public EntitySet<Purchase> Purchases
		{
			get
			{
				return this._Purchases;
			}
			set
			{
				this._Purchases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Author_Book", Storage="_Author", ThisKey="Code_author", OtherKey="Code_author", IsForeignKey=true)]
		public Author Author
		{
			get
			{
				return this._Author.Entity;
			}
			set
			{
				Author previousValue = this._Author.Entity;
				if (((previousValue != value) 
							|| (this._Author.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Author.Entity = null;
						previousValue.Books.Remove(this);
					}
					this._Author.Entity = value;
					if ((value != null))
					{
						value.Books.Add(this);
						this._Code_author = value.Code_author;
					}
					else
					{
						this._Code_author = default(Nullable<int>);
					}
					this.SendPropertyChanged("Author");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Publishing_house_Book", Storage="_Publishing_house", ThisKey="Code_publish", OtherKey="Code_publish", IsForeignKey=true)]
		public Publishing_house Publishing_house
		{
			get
			{
				return this._Publishing_house.Entity;
			}
			set
			{
				Publishing_house previousValue = this._Publishing_house.Entity;
				if (((previousValue != value) 
							|| (this._Publishing_house.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Publishing_house.Entity = null;
						previousValue.Books.Remove(this);
					}
					this._Publishing_house.Entity = value;
					if ((value != null))
					{
						value.Books.Add(this);
						this._Code_publish = value.Code_publish;
					}
					else
					{
						this._Code_publish = default(Nullable<int>);
					}
					this.SendPropertyChanged("Publishing_house");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Purchases(Purchase entity)
		{
			this.SendPropertyChanging();
			entity.Book = this;
		}
		
		private void detach_Purchases(Purchase entity)
		{
			this.SendPropertyChanging();
			entity.Book = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Purchases")]
	public partial class Purchase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Code_purchase;
		
		private System.Nullable<int> _Code_book;
		
		private System.Nullable<System.DateTime> _Date_order;
		
		private System.Nullable<int> _Code_delivery;
		
		private System.Nullable<bool> _Type_purchase;
		
		private System.Nullable<double> _Cost;
		
		private System.Nullable<int> _Amount;
		
		private EntityRef<Book> _Book;
		
		private EntityRef<Delivery> _Delivery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCode_purchaseChanging(int value);
    partial void OnCode_purchaseChanged();
    partial void OnCode_bookChanging(System.Nullable<int> value);
    partial void OnCode_bookChanged();
    partial void OnDate_orderChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_orderChanged();
    partial void OnCode_deliveryChanging(System.Nullable<int> value);
    partial void OnCode_deliveryChanged();
    partial void OnType_purchaseChanging(System.Nullable<bool> value);
    partial void OnType_purchaseChanged();
    partial void OnCostChanging(System.Nullable<double> value);
    partial void OnCostChanged();
    partial void OnAmountChanging(System.Nullable<int> value);
    partial void OnAmountChanged();
    #endregion
		
		public Purchase()
		{
			this._Book = default(EntityRef<Book>);
			this._Delivery = default(EntityRef<Delivery>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code_purchase", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Code_purchase
		{
			get
			{
				return this._Code_purchase;
			}
			set
			{
				if ((this._Code_purchase != value))
				{
					this.OnCode_purchaseChanging(value);
					this.SendPropertyChanging();
					this._Code_purchase = value;
					this.SendPropertyChanged("Code_purchase");
					this.OnCode_purchaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code_book", DbType="Int")]
		public System.Nullable<int> Code_book
		{
			get
			{
				return this._Code_book;
			}
			set
			{
				if ((this._Code_book != value))
				{
					if (this._Book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCode_bookChanging(value);
					this.SendPropertyChanging();
					this._Code_book = value;
					this.SendPropertyChanged("Code_book");
					this.OnCode_bookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_order", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Date_order
		{
			get
			{
				return this._Date_order;
			}
			set
			{
				if ((this._Date_order != value))
				{
					this.OnDate_orderChanging(value);
					this.SendPropertyChanging();
					this._Date_order = value;
					this.SendPropertyChanged("Date_order");
					this.OnDate_orderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code_delivery", DbType="Int")]
		public System.Nullable<int> Code_delivery
		{
			get
			{
				return this._Code_delivery;
			}
			set
			{
				if ((this._Code_delivery != value))
				{
					if (this._Delivery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCode_deliveryChanging(value);
					this.SendPropertyChanging();
					this._Code_delivery = value;
					this.SendPropertyChanged("Code_delivery");
					this.OnCode_deliveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type_purchase", DbType="Bit")]
		public System.Nullable<bool> Type_purchase
		{
			get
			{
				return this._Type_purchase;
			}
			set
			{
				if ((this._Type_purchase != value))
				{
					this.OnType_purchaseChanging(value);
					this.SendPropertyChanging();
					this._Type_purchase = value;
					this.SendPropertyChanged("Type_purchase");
					this.OnType_purchaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Float")]
		public System.Nullable<double> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int")]
		public System.Nullable<int> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_Purchase", Storage="_Book", ThisKey="Code_book", OtherKey="Code_book", IsForeignKey=true)]
		public Book Book
		{
			get
			{
				return this._Book.Entity;
			}
			set
			{
				Book previousValue = this._Book.Entity;
				if (((previousValue != value) 
							|| (this._Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Book.Entity = null;
						previousValue.Purchases.Remove(this);
					}
					this._Book.Entity = value;
					if ((value != null))
					{
						value.Purchases.Add(this);
						this._Code_book = value.Code_book;
					}
					else
					{
						this._Code_book = default(Nullable<int>);
					}
					this.SendPropertyChanged("Book");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Delivery_Purchase", Storage="_Delivery", ThisKey="Code_delivery", OtherKey="Code_delivery", IsForeignKey=true)]
		public Delivery Delivery
		{
			get
			{
				return this._Delivery.Entity;
			}
			set
			{
				Delivery previousValue = this._Delivery.Entity;
				if (((previousValue != value) 
							|| (this._Delivery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Delivery.Entity = null;
						previousValue.Purchases.Remove(this);
					}
					this._Delivery.Entity = value;
					if ((value != null))
					{
						value.Purchases.Add(this);
						this._Code_delivery = value.Code_delivery;
					}
					else
					{
						this._Code_delivery = default(Nullable<int>);
					}
					this.SendPropertyChanged("Delivery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Deliveries")]
	public partial class Delivery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Code_delivery;
		
		private string _Name_delivery;
		
		private string _Name_company;
		
		private string _Address1;
		
		private System.Nullable<long> _Phone;
		
		private string _INN;
		
		private EntitySet<Purchase> _Purchases;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCode_deliveryChanging(int value);
    partial void OnCode_deliveryChanged();
    partial void OnName_deliveryChanging(string value);
    partial void OnName_deliveryChanged();
    partial void OnName_companyChanging(string value);
    partial void OnName_companyChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnPhoneChanging(System.Nullable<long> value);
    partial void OnPhoneChanged();
    partial void OnINNChanging(string value);
    partial void OnINNChanged();
    #endregion
		
		public Delivery()
		{
			this._Purchases = new EntitySet<Purchase>(new Action<Purchase>(this.attach_Purchases), new Action<Purchase>(this.detach_Purchases));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code_delivery", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Code_delivery
		{
			get
			{
				return this._Code_delivery;
			}
			set
			{
				if ((this._Code_delivery != value))
				{
					this.OnCode_deliveryChanging(value);
					this.SendPropertyChanging();
					this._Code_delivery = value;
					this.SendPropertyChanged("Code_delivery");
					this.OnCode_deliveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_delivery", DbType="Char(30)")]
		public string Name_delivery
		{
			get
			{
				return this._Name_delivery;
			}
			set
			{
				if ((this._Name_delivery != value))
				{
					this.OnName_deliveryChanging(value);
					this.SendPropertyChanging();
					this._Name_delivery = value;
					this.SendPropertyChanged("Name_delivery");
					this.OnName_deliveryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_company", DbType="Char(20)")]
		public string Name_company
		{
			get
			{
				return this._Name_company;
			}
			set
			{
				if ((this._Name_company != value))
				{
					this.OnName_companyChanging(value);
					this.SendPropertyChanging();
					this._Name_company = value;
					this.SendPropertyChanged("Name_company");
					this.OnName_companyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="VarChar(100)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="BigInt")]
		public System.Nullable<long> Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INN", DbType="Char(13)")]
		public string INN
		{
			get
			{
				return this._INN;
			}
			set
			{
				if ((this._INN != value))
				{
					this.OnINNChanging(value);
					this.SendPropertyChanging();
					this._INN = value;
					this.SendPropertyChanged("INN");
					this.OnINNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Delivery_Purchase", Storage="_Purchases", ThisKey="Code_delivery", OtherKey="Code_delivery")]
		public EntitySet<Purchase> Purchases
		{
			get
			{
				return this._Purchases;
			}
			set
			{
				this._Purchases.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Purchases(Purchase entity)
		{
			this.SendPropertyChanging();
			entity.Delivery = this;
		}
		
		private void detach_Purchases(Purchase entity)
		{
			this.SendPropertyChanging();
			entity.Delivery = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Publishing_house")]
	public partial class Publishing_house : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Code_publish;
		
		private string _Publish;
		
		private string _City;
		
		private EntitySet<Book> _Books;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCode_publishChanging(int value);
    partial void OnCode_publishChanged();
    partial void OnPublishChanging(string value);
    partial void OnPublishChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    #endregion
		
		public Publishing_house()
		{
			this._Books = new EntitySet<Book>(new Action<Book>(this.attach_Books), new Action<Book>(this.detach_Books));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code_publish", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Code_publish
		{
			get
			{
				return this._Code_publish;
			}
			set
			{
				if ((this._Code_publish != value))
				{
					this.OnCode_publishChanging(value);
					this.SendPropertyChanging();
					this._Code_publish = value;
					this.SendPropertyChanged("Code_publish");
					this.OnCode_publishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publish", DbType="Char(30)")]
		public string Publish
		{
			get
			{
				return this._Publish;
			}
			set
			{
				if ((this._Publish != value))
				{
					this.OnPublishChanging(value);
					this.SendPropertyChanging();
					this._Publish = value;
					this.SendPropertyChanged("Publish");
					this.OnPublishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="Char(20)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Publishing_house_Book", Storage="_Books", ThisKey="Code_publish", OtherKey="Code_publish")]
		public EntitySet<Book> Books
		{
			get
			{
				return this._Books;
			}
			set
			{
				this._Books.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Books(Book entity)
		{
			this.SendPropertyChanging();
			entity.Publishing_house = this;
		}
		
		private void detach_Books(Book entity)
		{
			this.SendPropertyChanging();
			entity.Publishing_house = null;
		}
	}
}
#pragma warning restore 1591
